id: paginate_api
namespace: demo

inputs:
  - name: url
    type: STRING
    defaults: https://api.spotify.com/v1/me/tracks

tasks:

  - id: get_bearer
    type: io.kestra.core.tasks.flows.Flow
    namespace: spotify
    flowId: get_bearer
    outputs:
      bearer: '{{ outputs.bearer.value }}'
    wait: true
  
  - id: tracks
    type: io.kestra.plugin.fs.http.Request
    uri: '{{ inputs.url }}'
    method: GET
    contentType: "application/x-www-form-urlencoded"
    headers:
      Authorization: "Bearer {{ outputs.get_bearer.outputs.bearer }}"

  - id: if
    type: io.kestra.core.tasks.flows.If
    condition: '{{ json(outputs.tracks.body).next contains "api.spotify.com" }}'
    then:
      - id: track
        type: io.kestra.core.tasks.flows.Flow
        namespace: demo
        flowId: paginate_api
        inputs:
          url: '{{ json(outputs.tracks.body).next }}'
        wait: true
    else:
      - id: out
        type: io.kestra.core.tasks.log.Log
        message: 'Parsed all tracks (last url was {{ json(outputs.tracks.body).previous }})'


